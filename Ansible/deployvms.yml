---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Check groupvars/all file version
      fail: msg="groupvars/all file version is too low.  Please update to latest"
      when:  ("{{ all-file_version|int }}" < 5 )

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Capture build date
      set_fact: env_builddate="{{lookup('pipe','date +%d/%m/%y_%H:%M')}}"

    - name: Request and return environment details
      env_db_manage: DBHOST={{ env_db_ip }} DBUSER={{ env_db_user }} DBPASS={{ env_db_password }} DBNAME={{ env_db_name }} ENV_UUID={{ env_uuid }} ENV_NAME={{ env_name_clean }} ENV_ZONETYPE={{ env_zonetype }} ENV_SECGROUPS={{ env_zone_secgroups }} ENV_COMMENT='{{ env_comment | regex_replace(' ', '_') }}' ENV_ACTION=req

    - name: Check environment variables returned ok
      fail: msg="No environments configurations available - {{ env_return }} {{ env_retmsg }}."
      when: env_return != "success"

    - name: Update group vars file with environmemt details for reference
      lineinfile:
        dest="group_vars/{{ env_name_clean }}"
        insertafter="^env_hv.*$"
        line="{{ item }}"
      with_items:
        - "env_builddate: \"{{ env_builddate }}\""
        - "env_pubvlan: \"{{ env_pubvlan }}\""
        - "env_pubgw: \"{{ env_pubgw }}\""
        - "env_pubmask: \"{{ env_pubmask }}\""
        - "env_pubendip: \"{{ env_pubendip }}\""
        - "env_pubstartip: \"{{ env_pubstartip }}\""
        - "env_podvlans: \"{{ env_podvlans }}\""
        - "env_podgw: \"{{ env_podgw }}\""
        - "env_podmask: \"{{ env_podmask }}\""
        - "env_podendip: \"{{ env_podendip }}\""
        - "env_podstartip: \"{{ env_podstartip }}\""
        - "env_guestnetstartip: \"{{ env_guestnetstartip }}\""
        - "env_guestnetendip: \"{{ env_guestnetendip }}\""
        - "env_guestnetmask: \"{{ env_guestnetmask }}\""
        - "env_guestnetgw: \"{{ env_guestnetgw }}\""
        - "env_guestnetvlan: \"{{ env_guestnetvlan }}\""

# Create build project if it doesn't exist.
    - name: Create project
      include: tasks/updateproject.yml project_tag=Deploying_VMs

    - name: Add accounts to project
      shell: cs addAccountToProject account={{ item }} projectid=`cs listProjects | jq -c '.project[] | select(.displaytext | contains("{{ build_project }}"))' | jq '.id'`
      with_items:
        - "{{ env_accounts.split(',') }}"
      async: 60
      poll: 0

    - name: Build VMs
      include: ./tasks/buildvms.yml

    - name: Add dvfilter
      include: ./tasks/add_dvfilter.yml
      when: (use_dvfilter) and (use_external_hv_hosts|bool == false)

    - name: Update project - tag Configuring_MySQL
      include: tasks/updateproject.yml project_tag=Configuring_MySQL

- hosts: mysql_hosts
  gather_facts: no
  vars:
    num_db_hosts: "{{ groups['mysql_hosts'] | length }}"
  roles:
    - { role: timezone, when: num_db_hosts | int != 0 }
    - { role: mysql, when: num_db_hosts | int != 0 }

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Configuring_Mgmt_Server
      include: tasks/updateproject.yml project_tag=Configuring_Mgmt_Server

- hosts: cloudstack_manager_hosts
  gather_facts: no
  vars:
    num_marv_hosts: "{{ groups['marvin_host'] | length }}"
    num_db_hosts: "{{ groups['mysql_hosts'] | length }}"
  roles:
    - timezone
    - { role: mysql, when: num_db_hosts | int == 0 }
    - cloudstack-manager
    - cloudmonkey

## update status

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Configuring_Hypervisors
      include: tasks/updateproject.yml project_tag=Configuring_Hypervisors

## Configure Hypervisor hosts

- hosts: xenserver_hosts
  gather_facts: no
  vars:
    num_xen_hosts: "{{ groups['xenserver_hosts'] | length }}"
  roles:
    - { role: xenserver, basic_vlan=env_guestnetvlan, when: num_xen_hosts | int != 0 }

- hosts: kvm_hosts
  gather_facts: no
  vars:
    num_kvm_hosts: "{{ groups['kvm_hosts'] | length }}"
  roles:
    - { role: timezone, when: num_kvm_hosts | int != 0 }
    - { role: kvm, when: num_kvm_hosts | int != 0 }

- hosts: esxi_hosts
  gather_facts: no
  vars:
    num_esxi_hosts: "{{ groups['vc_hosts'] | length }}"
  roles:
    - { role: vsphere, when: num_esxi_hosts | int != 0 }

- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    num_esxi_hosts: "{{ groups['vc_hosts'] | length }}"
  tasks:
    - include: ./roles/vsphere/tasks/configure_vcenter.yml
      when: "num_esxi_hosts | int != 0"

## update status

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Configuring_Storage
      include: tasks/updateproject.yml project_tag=Configuring_Storage

- hosts: primary_storage_hosts
  gather_facts: no
  roles:
    - { role: cloudstack-nfsshares, storage_action: 'addprimary' }

- hosts: secondary_storage_hosts
  gather_facts: no
  roles:
    - { role: cloudstack-nfsshares, storage_action: 'addsecondary' }

## NASTY HACK TO ENABLE XENSERVER TO USE BUILT-IN TEMPLATE
- hosts: secondary_storage_hosts
  gather_facts: no
  vars:
    num_xen_hosts: "{{ groups['xenserver_hosts'] | length }}"
  tasks:
    - include: ./tasks/xenserver_builtintemplate_hack.yml
      when: "num_xen_hosts | int != 0"
## REMOVE WHEN SSVM FIXED

## update status

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Configuring_Zone
      include: tasks/updateproject.yml project_tag=Configuring_Zone

## Configure Zone on Mgmt Server

- hosts: primary_cs_manager
  roles:
    - cloudstack-config

## update status

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Configuring_Marvin
      include: tasks/updateproject.yml project_tag=Configuring_Marvin

## Configure Marvin host

- hosts: marvin_host
  vars:
    num_marv_hosts: "{{ groups['marvin_host'] | length }}"
    num_db_hosts: "{{ groups['mysql_hosts'] | length }}"
  roles:

    - { role: timezone, when: num_marv_hosts | int != 0 }
    - { role: cloudmonkey, when: num_marv_hosts | int != 0  }
    - { role: hipchat_client, when: (num_marv_hosts | int != 0) and (use_hipchat) }
    - { role: marvin, when: num_marv_hosts | int != 0  }

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Report all built hosts
      debug: msg="{{ item }} ansible_ssh_host={{ hostvars[item]['ansible_ssh_host'] | default( '<undefined>' ) }}"
      with_items:
        - "{{ groups[ env_name_clean ] }}"

## update status

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Built
      include: tasks/updateproject.yml project_tag=Built


## Wait for services/templates etc

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Waiting_for_System_VMs
      include: tasks/updateproject.yml project_tag=Waiting_for_System_VMs
      when: wait_till_setup

- hosts: primary_cs_manager
  tasks:
    - include: ./roles/cloudstack-manager/tasks/wait-for-environment.yml
      when: wait_till_setup

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag System_VMs_up
      include: tasks/updateproject.yml project_tag=System_VMs_up
      when: wait_till_setup

## Wait for services/templates etc

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Waiting_for_builtin_template
      include: tasks/updateproject.yml project_tag=Waiting_for_builtin_template
      when: wait_for_template

- hosts: primary_cs_manager
  tasks:
    - include: ./roles/cloudstack-manager/tasks/wait-for-template.yml
      when: wait_for_template
  tags:
    - waitfortemplate

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: update project - tag Running
      include: tasks/updateproject.yml project_tag=Running
      when: wait_for_template

## Run Marvin Tests

- hosts: marvin_host
  gather_facts: no
  tasks:

  - name: Set component tests to run
    shell: "echo /marvin/componenttests-{{ env_name_clean }}.sh | at now + 1 min"
    tags:
      - marvin
      - run_component_tests
    when: run_component_tests

  - name: Set smoke tests to run
    shell: "echo /marvin/smoketests-{{ env_name_clean }}.sh | at now + 1 min"
    tags:
      - marvin
      - run_smoke_tests
    when: run_smoke_tests
